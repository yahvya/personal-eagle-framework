<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_a00146_source" xml:lang="fr">
<title>RegexCond.php</title>
<indexterm><primary>RegexCond.php</primary></indexterm>
Aller Ã  la documentation de ce fichier.<programlisting linenumbering="unnumbered"><anchor xml:id="_a00146_source_1l00001"/>00001 &lt;?php
<anchor xml:id="_a00146_source_1l00002"/>00002 
<anchor xml:id="_a00146_source_1l00003"/>00003 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_a00408">SaboCore\Database\Default\Conditions</link>;
<anchor xml:id="_a00146_source_1l00004"/>00004 
<anchor xml:id="_a00146_source_1l00005"/>00005 use&#32;Attribute;
<anchor xml:id="_a00146_source_1l00006"/>00006 use&#32;Override;
<anchor xml:id="_a00146_source_1l00007"/>00007 use&#32;<link linkend="_a00752">SaboCore\Database\Default\System\MysqlModel</link>;
<anchor xml:id="_a00146_source_1l00008"/>00008 
<anchor xml:id="_a00146_source_1l00013"/>00013 <emphasis role="preprocessor">#[Attribute]</emphasis>
<anchor xml:id="_a00146_source_1l00014"/><link linkend="_a00692">00014</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_a00692">RegexCond</link>&#32;<emphasis role="keyword">implements</emphasis>&#32;<link linkend="_a00664">Cond</link>{
<anchor xml:id="_a00146_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;$errorMessage;
<anchor xml:id="_a00146_source_1l00019"/>00019 
<anchor xml:id="_a00146_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;$regex;
<anchor xml:id="_a00146_source_1l00024"/>00024 
<anchor xml:id="_a00146_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;$regexOptions;
<anchor xml:id="_a00146_source_1l00029"/>00029 
<anchor xml:id="_a00146_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>&#32;<emphasis role="keywordtype">string</emphasis>&#32;$delimiter;
<anchor xml:id="_a00146_source_1l00034"/>00034 
<anchor xml:id="_a00146_source_1l00041"/><link linkend="_a00692_1a353115eaa9119e2993aff6602071379f">00041</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">function</emphasis>&#32;<link linkend="_a00692_1a353115eaa9119e2993aff6602071379f">__construct</link>(<emphasis role="keywordtype">string</emphasis>&#32;$regex,<emphasis role="keywordtype">string</emphasis>&#32;$errorMessage,<emphasis role="keywordtype">string</emphasis>&#32;$regexOptions&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,<emphasis role="keywordtype">string</emphasis>&#32;$delimiter&#32;=&#32;<emphasis role="stringliteral">&quot;#&quot;</emphasis>){
<anchor xml:id="_a00146_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;$this-&gt;regex&#32;=&#32;$regex;
<anchor xml:id="_a00146_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;$this-&gt;errorMessage&#32;=&#32;$errorMessage;
<anchor xml:id="_a00146_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;$this-&gt;regexOptions&#32;=&#32;$regexOptions;
<anchor xml:id="_a00146_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;$this-&gt;delimiter&#32;=&#32;strlen($delimiter)&#32;==&#32;1&#32;?&#32;$delimiter&#32;:&#32;<emphasis role="stringliteral">&quot;#&quot;</emphasis>;
<anchor xml:id="_a00146_source_1l00046"/>00046 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00146_source_1l00047"/>00047 
<anchor xml:id="_a00146_source_1l00048"/>00048 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#[Override]</emphasis>
<anchor xml:id="_a00146_source_1l00049"/><link linkend="_a00692_1aaab6c4c9f3ed625334aa5024eb645ba0">00049</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">function</emphasis>&#32;<link linkend="_a00692_1aaab6c4c9f3ed625334aa5024eb645ba0">verifyData</link>(<link linkend="_a00752">MysqlModel</link>&#32;$baseModel,<emphasis role="keywordtype">string</emphasis>&#32;$attributeName,mixed&#32;$data):bool{
<anchor xml:id="_a00146_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;@preg_match(pattern:&#32;$this-&gt;delimiter&#32;.&#32;$this-&gt;regex&#32;.&#32;$this-&gt;delimiter&#32;.&#32;$this-&gt;regexOptions,subject:&#32;$data);
<anchor xml:id="_a00146_source_1l00051"/>00051 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00146_source_1l00052"/>00052 
<anchor xml:id="_a00146_source_1l00053"/>00053 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#[Override]</emphasis>
<anchor xml:id="_a00146_source_1l00054"/><link linkend="_a00692_1a2bd06fb688dc4a272e4a92500cb3a4ce">00054</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">function</emphasis>&#32;<link linkend="_a00692_1a2bd06fb688dc4a272e4a92500cb3a4ce">getIsDisplayable</link>():bool{
<anchor xml:id="_a00146_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;true;
<anchor xml:id="_a00146_source_1l00056"/>00056 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00146_source_1l00057"/>00057 
<anchor xml:id="_a00146_source_1l00058"/>00058 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;#[Override]</emphasis>
<anchor xml:id="_a00146_source_1l00059"/><link linkend="_a00692_1a3d24ed0e93b212b4d5e382fa795bf4ef">00059</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>&#32;<emphasis role="keyword">function</emphasis>&#32;<link linkend="_a00692_1a3d24ed0e93b212b4d5e382fa795bf4ef">getErrorMessage</link>():string{
<anchor xml:id="_a00146_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;$this-&gt;errorMessage;
<anchor xml:id="_a00146_source_1l00061"/>00061 &#32;&#32;&#32;&#32;}
<anchor xml:id="_a00146_source_1l00062"/>00062 }
</programlisting></section>
